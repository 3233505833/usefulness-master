# Validation data size ratio
val_data_size: 0.1

# Model Configuration
model_name: "./model/llama-3-chinese-8b-instruct-v2"  # Name of the model
model_dtype: "bfloat16"
token: null  # Authentication token, if required
split_model: false  # Whether to split the model

# Model Training Parameters
block_size: 1024  # Size of the blocks used in the model
lora_rank: 64  # LoRA rank
lora_alpha: 16  # Alpha value for LoRA
lora_dropout: 0.05  # Dropout rate for LoRA
learning_rate: 0.0001  # Learning rate
lr_scheduler_type: "cosine"  # Type of learning rate scheduler
warmup_steps: 30  # Number of warmup steps
weight_decay: 0.05  # Weight decay factor
output_dir: "./new24ccc"  # Directory to save model checkpoints
log_steps: 10  # Frequency of logging steps
eval_steps: 10  # Evaluation step frequency
save_steps: 30  # Model saving step frequency
epochs: 3  # Number of training epochs
batch_size: 1  # Training batch size
gradient_accumulation_steps: 2  # Gradient accumulation steps
gradient_checkpointing: true  # Enable gradient checkpointing
trust_remote_code: true  # Trust remote code flag
save_limit: 1  # Limit for saving models
fp16: false
bf16: true
optimizer: "adamw_bnb_8bit"  # Optimizer to use

# Additional Model Configuration
use_int4: true  # Use int4 precision
use_int8: false  # Use int8 precision
disable_lora: false  # Disable LoRA
disable_flash_attention: true  # Disable flash attention
all_linear: true  # Use LoRA on all linear layers
pad_token_id: 0  # End of sequence token ID
add_eos_token: false  # Add EOS token to tokenizer
add_bos_token: false  # Add BOS token to tokenizer
add_pad_token: false  # Add PAD token to tokenizer
padding_side: null  # Padding side for tokenizer
packing: false

# Dataset Handling
completion_only: false  # Only use completion loss
wand_db_project: ""  # Wandb project to use
datasets:
  - path: "./zhdata"  # Dataset path
    split: "train"  # Dataset split
    handler: "handle_instruction_dataset"
    fields: "instruction;input;output"
    format: |
      <s>### Instruction:
      {instruction}

      ### Input:
      {input}

      ### Response:
      {output}</s>